{"ast":null,"code":"import { TOKEN_LOCAL_STORAGE_KEY_ACCESS } from 'src/app/shared/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AuthSetTokenInterceptor = /*#__PURE__*/(() => {\n  class AuthSetTokenInterceptor {\n    constructor(router) {\n      this.router = router;\n    }\n\n    intercept(request, next) {\n      const accessToken = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY_ACCESS);\n\n      if (accessToken) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n      }\n\n      return next.handle(request); // if (!token) {\n      //   return next.handle(request).pipe(\n      //     tap(() => { console.log(\"HttpInterceptor NO-TOKEN\"); this.router.navigate(['/login']) }),\n      //     catchError((error: HttpErrorResponse) => {\n      //       console.log(\"interceptor err\", error);\n      //       if (error.status === 401) {\n      //         // this.auth.logout();\n      //         this.router.navigate(['/login'])\n      //       }\n      //       return throwError(error)\n      //     }));\n      // }\n      // return next.handle(request).pipe(\n      //   tap(() => console.log(\"HttpInterceptor work\")),\n      //   catchError((error: HttpErrorResponse) => {\n      //     console.log(\"interceptor err\", error);\n      //     if (error.status === 401) {\n      //       // this.auth.logout();\n      //       this.router.navigate(['/login'])\n      //     }\n      //     return throwError(error)\n      //   }));\n    }\n\n  }\n\n  AuthSetTokenInterceptor.ɵfac = function AuthSetTokenInterceptor_Factory(t) {\n    return new (t || AuthSetTokenInterceptor)(i0.ɵɵinject(i1.Router));\n  };\n\n  AuthSetTokenInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthSetTokenInterceptor,\n    factory: AuthSetTokenInterceptor.ɵfac\n  });\n  return AuthSetTokenInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}