{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport * as action from './actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/shared/services/customers.service\";\nimport * as i3 from \"@ngrx/store\";\nexport let CustomersEffects = /*#__PURE__*/(() => {\n  class CustomersEffects {\n    constructor(actions$, customersService, store) {\n      this.actions$ = actions$;\n      this.customersService = customersService;\n      this.store = store;\n      this.getCustomers$ = createEffect(() => this.actions$.pipe(ofType(action.CUSTOMERS_GET_ALL_REQUEST), switchMap(() => this.customersService.getAllCustomers().pipe(map(data => action.customersGetAllSuccess({\n        payload: data\n      })), catchError(err => of(action.customersGetAllError({\n        err: err.message\n      })))))));\n      this.addCustomer$ = createEffect(() => this.actions$.pipe(ofType(action.CUSTOMERS_ADD_REQUEST), switchMap(props => {\n        return this.customersService.addCustomer(props).pipe(map(data => action.customersAddSuccess({\n          payload: data\n        })), catchError(err => of(action.customersAddError({\n          err: err.message\n        }))));\n      })));\n      this.updateCustomer$ = createEffect(() => this.actions$.pipe(ofType(action.CUSTOMERS_EDIT_REQUEST), switchMap(props => {\n        return this.customersService.updateCustomer(props).pipe(map(data => action.customersEditSuccess({\n          payload: data\n        })), catchError(err => of(action.customersEditError({\n          err: err.message\n        }))));\n      })));\n    }\n\n  }\n\n  CustomersEffects.ɵfac = function CustomersEffects_Factory(t) {\n    return new (t || CustomersEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.CustomersService), i0.ɵɵinject(i3.Store));\n  };\n\n  CustomersEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomersEffects,\n    factory: CustomersEffects.ɵfac\n  });\n  return CustomersEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}