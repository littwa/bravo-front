{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { getCustomers } from 'src/app/core';\nimport { customersGetAllRequest } from 'src/app/core/customers/actions';\nimport { ordersAddRequest } from 'src/app/core/orders/actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"../modal-container/modal-container.component\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../chips-add-product/chips-add-product.component\";\nimport * as i10 from \"@angular/material/datepicker\";\n\nfunction AddOrderFormComponent_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", state_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(state_r2.name);\n  }\n}\n\nexport let AddOrderFormComponent = /*#__PURE__*/(() => {\n  class AddOrderFormComponent {\n    constructor(formBuilder, store) {\n      this.formBuilder = formBuilder;\n      this.store = store;\n      this.allCustomers = [];\n      this.selectedCustomers = [];\n\n      this.utilityDateTransformation = inputDate => {\n        const date = inputDate.toISOString();\n        const timezone_type = inputDate.getTimezoneOffset();\n        const timezone = inputDate.toLocaleDateString('en-GB', {\n          timeZoneName: 'long'\n        }).split(\", \")[1];\n        return {\n          date,\n          timezone_type,\n          timezone\n        };\n      };\n    }\n\n    ngOnInit() {\n      this.store.dispatch(customersGetAllRequest());\n      this.store.select(getCustomers).pipe().subscribe(customers => {\n        this.allCustomers = this.selectedCustomers = customers;\n      });\n      this.form = new FormGroup({\n        orderNo: new FormControl(\"\"),\n        customer: new FormControl(\"\"),\n        customerId: new FormControl(\"\"),\n        customerNo: new FormControl(\"\"),\n        items: new FormControl(\"\"),\n        notes: new FormControl(\"\"),\n        status: new FormControl(\"new\"),\n        productsList: new FormControl(\"\"),\n        ordered: new FormControl(new Date()),\n        reqDelivery: new FormControl(null)\n      });\n    }\n\n    submitFormCreateOrder() {\n      const reqDelivery = this.utilityDateTransformation(this.form.value.reqDelivery);\n      const ordered = this.utilityDateTransformation(this.form.value.ordered);\n      const dtoCreateOrder = Object.assign(Object.assign({}, this.form.value), {\n        customerId: this.form.value.customerId._id,\n        reqDelivery,\n        ordered\n      });\n      this.store.dispatch(ordersAddRequest(dtoCreateOrder));\n    }\n\n    onKey(value) {\n      this.selectedCustomers = this.search(value);\n    }\n\n    search(value) {\n      let filterStr = value.toLowerCase().trim();\n      if (!filterStr) return this.selectedCustomers = this.allCustomers;\n      return this.allCustomers.filter(customer => customer.name.toLowerCase().includes(filterStr));\n    }\n\n    sel(event$) {\n      this.form.patchValue({\n        customer: event$.value.name,\n        customerNo: event$.value.customerNo\n      }); // customerId: event$.value._id\n    }\n\n    arrProductId(e) {\n      this.form.patchValue({\n        productsList: e\n      });\n    }\n\n  }\n\n  AddOrderFormComponent.ɵfac = function AddOrderFormComponent_Factory(t) {\n    return new (t || AddOrderFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store));\n  };\n\n  AddOrderFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddOrderFormComponent,\n    selectors: [[\"app-add-order-form\"]],\n    decls: 41,\n    vars: 4,\n    consts: [[\"title\", \"Add Order\", \"btnText\", \" + Add Order\", 3, \"btn\"], [1, \"order-add\", 3, \"formGroup\"], [\"appearance\", \"outline\"], [\"formControlName\", \"orderNo\", \"matInput\", \"\", \"placeholder\", \"Order No\"], [\"formControlName\", \"customerId\", 3, \"selectionChange\"], [1, \"inp\"], [3, \"keyup\"], [\"disabled\", \"\", \"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", 1, \"disabled-input\"], [\"readonly\", \"\", \"formControlName\", \"customer\", \"matInput\", \"\", \"placeholder\", \"Name Customer\"], [\"readonly\", \"\", \"formControlName\", \"customerNo\", \"matInput\", \"\", \"placeholder\", \"No Customer\"], [\"formControlName\", \"items\", \"matInput\", \"\", \"placeholder\", \"items\"], [\"formControlName\", \"notes\", \"matInput\", \"\", \"placeholder\", \"notes\"], [\"readonly\", \"\", \"formControlName\", \"status\", \"matInput\", \"\", \"placeholder\", \"status\"], [3, \"arrProductIdChanged\"], [\"formControlName\", \"reqDelivery\", \"matInput\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [3, \"value\"]],\n    template: function AddOrderFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-modal-container\", 0);\n        i0.ɵɵlistener(\"btn\", function AddOrderFormComponent_Template_app_modal_container_btn_0_listener() {\n          return ctx.submitFormCreateOrder();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"p\");\n        i0.ɵɵtext(3, \"Order No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-form-field\", 2);\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7, \"Customer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-select\", 4);\n        i0.ɵɵlistener(\"selectionChange\", function AddOrderFormComponent_Template_mat_select_selectionChange_9_listener($event) {\n          return ctx.sel($event);\n        });\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"input\", 6);\n        i0.ɵɵlistener(\"keyup\", function AddOrderFormComponent_Template_input_keyup_11_listener($event) {\n          return ctx.onKey($event.target.value);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"mat-option\", 7);\n        i0.ɵɵtext(13, \"Choose Customer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, AddOrderFormComponent_mat_option_14_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"mat-form-field\", 9);\n        i0.ɵɵelement(16, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 9);\n        i0.ɵɵelement(18, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20, \"items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-form-field\", 2);\n        i0.ɵɵelement(22, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p\");\n        i0.ɵɵtext(24, \"notes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-form-field\", 2);\n        i0.ɵɵelement(26, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"p\");\n        i0.ɵɵtext(28, \"status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"mat-form-field\", 9);\n        i0.ɵɵelement(30, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"p\");\n        i0.ɵɵtext(32, \"Products List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"app-chips-add-product\", 15);\n        i0.ɵɵlistener(\"arrProductIdChanged\", function AddOrderFormComponent_Template_app_chips_add_product_arrProductIdChanged_33_listener($event) {\n          return ctx.arrProductId($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"p\");\n        i0.ɵɵtext(35, \"Date Required Delivery\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"mat-form-field\", 2);\n        i0.ɵɵelement(37, \"input\", 16)(38, \"mat-datepicker-toggle\", 17)(39, \"mat-datepicker\", null, 18);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(40);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.selectedCustomers);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r1);\n      }\n    },\n    directives: [i3.ModalContainerComponent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatFormField, i1.DefaultValueAccessor, i5.MatInput, i1.NgControlStatus, i1.FormControlName, i6.MatSelect, i7.MatOption, i8.NgForOf, i9.ChipsAddProductComponent, i10.MatDatepickerInput, i10.MatDatepickerToggle, i4.MatSuffix, i10.MatDatepicker],\n    styles: [\".inp[_ngcontent-%COMP%]{border:1px solid #000;padding-left:10px}.inp[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:400px;height:30px;padding:0;border:none}.order-add[_ngcontent-%COMP%]{margin-bottom:30px}.order-add[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:0}.checkbox-container[_ngcontent-%COMP%]   li.checkbox-breack[_ngcontent-%COMP%]{width:100%}.checkbox-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;padding:0}.checkbox-container[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:none;padding-right:20px;padding-bottom:5px;min-width:15%}.order-add[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:12px}  .order-add .mat-form-field{width:100%;overflow:hidden;border-radius:4px}  .disabled-input .mat-form-field-flex{background-color:#e9e9e9;border-radius:4px}  .order-add .mat-form-field-wrapper{margin-top:0;padding-bottom:6px}  .mat-dialog-container .order-add{width:440px}  .order-add .checkbox-container .mat-checkbox-inner-container{margin-top:3px}  .order-add .mat-form-field{width:100%}  .order-add .cont-unit-price .uinit-inp{margin-right:5px}\"]\n  });\n  return AddOrderFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}